---
import { Image } from "astro:assets"

import { getMediaTypes } from "../content/get-media-types"
import { detailsPagePath } from "../utils/paths"
import Icon from "./Icon"

type MediaItem = {
  id: string
  disabled?: boolean
  data: {
    title: string
    language: string
    authors: string[]
    type: { id: string }
    image: ImageMetadata
  }
}

interface Props {
  items: (MediaItem | undefined)[]
}

// We allow users to pass undefined values because
// this is in the return type of getEntry
const items = Astro.props.items.filter((item) => !!item)

const { t, direction } = Astro.locals.i18n

const mediaTypes = Object.fromEntries(
  (await getMediaTypes()).map((type) => [
    type.id,
    {
      id: type.id,
      name: t(type.data.label),
      icon: type.data.icon,
    },
  ]),
)
---

<ol class="divide-y divide-gray-200">
  {
    items.map((item) => (
      <li lang={item.data.language}>
        <a
          href={
            item.disabled
              ? "javascript:void(0)"
              : detailsPagePath(Astro.currentLocale, {
                  id: item.id,
                })
          }
          class="group flex overflow-hidden py-4 transition-colors ease-in-out md:rounded-sm md:py-6 md:hover:bg-gray-100"
          class:list={
            item.disabled ? "pointer-events-none cursor-default opacity-50" : ""
          }
          tabindex={item.disabled ? -1 : 0}
        >
          <div class="flex h-32 w-32 shrink-0 flex-col items-start justify-center">
            <Image
              class="max-h-32 w-auto max-w-32 rounded-sm object-contain shadow-md"
              src={item.data.image}
              alt=""
            />
          </div>

          <div
            class="ms-5 flex grow flex-col justify-center sm:ms-8"
            lang={item.data.language}
          >
            <p class="mb-1 line-clamp-3 font-bold text-gray-700 md:mb-3">
              <Icon
                className={`${mediaTypes[item.data.type.id].icon} me-2 align-bottom text-2xl text-gray-700`}
                ariaLabel={mediaTypes[item.data.type.id].name}
              />
              <span>{item.data.title}</span>
            </p>
            <div class="mb-3 flex flex-col flex-wrap items-start gap-2 md:flex-row md:items-center md:gap-3">
              {!!item.data.authors?.length && (
                <p class="mb-1 md:mb-0 md:text-base">
                  {item.data.authors.join(", ")}
                </p>
              )}
            </div>
          </div>

          <Icon
            className="mdi--chevron-right hidden sm:block md:group-hover:text-primary my-auto ms-2 me-4 shrink-0 text-2xl text-gray-300"
            flipIcon={direction === "rtl"}
            ariaLabel=""
          />
        </a>
      </li>
    ))
  }
</ol>
