---
import { getMediaItems } from "../../../content/get-media-items";
import { resolveLanguageLabel } from "../../../i18n/resolve-language";
import { useTranslate } from "../../../i18n/use-translate";
import { detailsPagePath } from "../../../utils/paths";
import Label from "./Label.astro";

interface Props {
  commonId: string;
  slug: string;
}

const { slug, commonId } = Astro.props;
const translations = (await getMediaItems())
  .filter((entry) => entry.data.commonId === commonId && entry.id !== slug)
  .sort((a, b) => a.data.language.localeCompare(b.data.language));

const t = useTranslate(Astro.currentLocale);
---

{
  !!translations.length && (
    <>
      <Label>{t("ln.common.translations")}</Label>
      <ul class="flex flex-wrap gap-2">
        {translations.map((translation) => (
          <li class="flex rounded-lg border border-gray-200 px-2 py-1 text-sm text-gray-600 hover:bg-gray-200">
            <a
              href={detailsPagePath(Astro.currentLocale, translation)}
              hreflang={translation.data.language}
            >
              {resolveLanguageLabel(translation.data.language)}
            </a>
          </li>
        ))}
      </ul>
    </>
  )
}
