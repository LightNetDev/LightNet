---
import type { GetStaticPaths } from "astro"
import { AstroError } from "astro/errors"
import config from "virtual:lightnet/config"

import { DETAILS_PAGES } from "../../content/content-schema"
import { getMediaItem, getMediaItems } from "../../content/get-media-items"
import { getMediaType } from "../../content/get-media-types"
import Page from "../../layouts/Page.astro"
import DocumentDetails from "./DocumentDetails.astro"

export const getStaticPaths = (async () => {
  const mediaItems = await getMediaItems()
  return config.locales.flatMap((locale) =>
    mediaItems.map(({ id: slug }) => ({ params: { slug, locale } })),
  )
}) satisfies GetStaticPaths

const { slug } = Astro.params
const mediaItem = (await getMediaItem(Astro.params.slug)).data

const {
  data: { detailsPage },
} = await getMediaType(mediaItem.type.id)

let CustomDetails
if (!DETAILS_PAGES.includes(detailsPage)) {
  const d = import.meta.glob("/src/details-pages/*.astro")
  const customDetailsImport = d[
    `/src/details-pages/${detailsPage}`
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  ] as () => Promise<any>
  if (!customDetailsImport) {
    throw new AstroError(
      `Unknown details page ${detailsPage}`,
      "Make sure to add your details component within /src/details-pages/",
    )
  }
  CustomDetails = (await customDetailsImport()).default
}
---

<Page title={mediaItem.title} description={mediaItem.description}>
  {detailsPage === "book" && <DocumentDetails slug={slug} style="book" />}
  {detailsPage === "document" && <DocumentDetails slug={slug} />}
  {detailsPage === "video" && <DocumentDetails slug={slug} />}
  {CustomDetails && <CustomDetails slug={slug} />}
</Page>
