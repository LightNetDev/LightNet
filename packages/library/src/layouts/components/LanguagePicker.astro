---
import config from "virtual:lightnet/config"

import Icon from "../../components/Icon"
import { resolveLanguageLabel } from "../../i18n/resolve-language-label"
import { useTranslate } from "../../i18n/use-translate"
import { localizePath } from "../../utils/paths"

const translations = config.locales.map((locale) => ({
  locale,
  label: resolveLanguageLabel(locale),
  active: locale === Astro.currentLocale,
  href: currentPathWithLocale(locale),
}))

function currentPathWithLocale(locale: string) {
  const currentPath = Astro.url.pathname
  const currentPathWithoutLocale = currentPath.startsWith(
    `/${Astro.currentLocale}/`,
  )
    ? currentPath.slice(Astro.currentLocale!.length + 2)
    : currentPath
  return localizePath(locale, currentPathWithoutLocale)
}

const t = useTranslate(Astro.currentLocale)
---

<div class="dy-dropdown dy-dropdown-end">
  <div
    tabindex="0"
    role="button"
    aria-label={t("ln.header.a11y.select-language")}
    class="hover:text-primary flex rounded-md p-3 text-gray-600"
  >
    <Icon class="mdi--translate" />
  </div>
  <div
    tabindex="0"
    class="dy-dropdown-content rounded-box text-base-content top-px mt-16 w-56 overflow-y-auto border border-white/5 bg-gray-50 shadow-md"
  >
    <ul class="dy-menu dy-menu-sm gap-1">
      {
        translations.map(({ label, locale, active, href }) => (
          <li>
            <a
              href={href}
              hreflang={locale}
              class="flex items-center gap-3 py-3"
              class:list={[active && "dy-active"]}
            >
              <span class="dy-badge dy-badge-outline dy-badge-sm p-3 font-mono text-xs font-bold uppercase tracking-widest opacity-50">
                {locale}
              </span>
              <span lang={locale} class="text-base">
                {label}
              </span>
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</div>
