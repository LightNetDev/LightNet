---
import config from "virtual:lightnet/config"

import Icon from "../../components/Icon"
import { useTranslate } from "../../i18n/use-translate"
import { localizePath, searchPagePath } from "../../utils/paths"
import LanguagePicker from "./LanguagePicker.astro"
import Menu from "./Menu.astro"
import MenuItem from "./MenuItem.astro"

const t = useTranslate(Astro.currentLocale)

const currentPath = Astro.url.pathname
console.log("currentPath", currentPath, config.mainMenu)
const items = (config.mainMenu ?? []).map(({ href, isExternal, label }) => ({
  path: isExternal ? href : localizePath(Astro.currentLocale, href),
  isExternal,
  label,
  isActive:
    !isExternal &&
    (currentPath === localizePath(Astro.currentLocale, href) ||
      currentPath === localizePath(Astro.currentLocale, href + "/") ||
      currentPath === href),
}))
---

<nav class="-mr-3 flex items-center">
  <a
    class="hover:text-primary flex p-3 text-gray-600"
    aria-label={t("ln.search.title")}
    data-astro-prefetch="viewport"
    href={searchPagePath(Astro.currentLocale)}><Icon class="mdi--magnify" /></a
  >
  <LanguagePicker />

  {
    !!items.length && (
      <Menu icon="mdi--menu" label="ln.header.a11y.open-main-menu">
        {items.map(({ label, path, isActive, isExternal }) => (
          <MenuItem
            href={path}
            active={isActive}
            target={isExternal ? "_blank" : "_self"}
          >
            {isExternal && <Icon class="mdi--external-link text-base" />}
            {t(label)}
          </MenuItem>
        ))}
      </Menu>
    )
  }
</nav>
