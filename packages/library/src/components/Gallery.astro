---
import type { ImageMetadata } from "astro"
import { Image } from "astro:assets"

import { getMediaTypes } from "../content/get-media-types"
import { detailsPagePath } from "../utils/paths"
import Icon from "./Icon"

type GalleryItem = {
  id: string
  data: {
    title: string
    type: { id: string }
    image: ImageMetadata
  }
}

const typeIcons = Object.fromEntries(
  (await getMediaTypes()).map((type) => [type.id, type.data.icon]),
)

interface Props {
  items: GalleryItem[]
  layout: "book" | "video" | "portrait" | "landscape"
}

const { items, layout } = Astro.props
---

{
  (layout === "book" || layout === "portrait") && (
    <ol class="grid grid-cols-2 items-end justify-between gap-x-7 gap-y-4 sm:grid-cols-3 md:grid-cols-4 md:gap-8 lg:grid-cols-5">
      {items.map((item) => (
        <li>
          <a
            href={detailsPagePath(Astro.currentLocale, item)}
            class="group flex flex-col gap-3"
          >
            <div
              class="relative overflow-hidden shadow-md outline-2 outline-gray-400 transition-all duration-75 ease-in-out sm:group-hover:outline"
              class:list={layout === "book" ? "rounded-sm" : "rounded-md"}
            >
              <Image
                class="h-full w-full object-contain"
                src={item.data.image}
                alt=""
                widths={[120, 160, 240, 320, 640]}
                sizes={
                  "(max-width: 640px) calc(calc(100vw - 3.5rem ) / 2), " +
                  "(max-width: 768px) calc(calc(100vw - 5rem ) / 3), " +
                  "(max-width: 1024px) calc(calc(100vw - 10rem ) / 4), " +
                  "(max-width: 1280px) calc(calc(100vw - 12rem ) / 5), " +
                  "217px"
                }
              />
              {layout === "book" && (
                <span class="absolute left-[3px] top-0 h-full w-[4px] bg-gradient-to-r from-gray-500/20 to-transparent" />
              )}
            </div>
            <span class="line-clamp-2 h-12 text-sm font-bold text-gray-700">
              <Icon
                className={`${typeIcons[item.data.type.id]} mr-2 align-bottom`}
              />
              {item.data.title}
            </span>
          </a>
        </li>
      ))}
    </ol>
  )
}
{
  (layout === "video" || layout === "landscape") && (
    <ol
      class="grid grid-cols-1 justify-between gap-x-7 gap-y-4 sm:grid-cols-2 md:grid-cols-3 md:gap-8 lg:grid-cols-4 xl:grid-cols-4"
      class:list={[layout === "landscape" && "items-end"]}
    >
      {items.map((item) => (
        <li>
          <a
            href={detailsPagePath(Astro.currentLocale, item)}
            class="group flex flex-col gap-3"
          >
            <div
              class="relative overflow-hidden rounded-md shadow-md outline-2 outline-gray-400 transition-all duration-75 ease-in-out sm:group-hover:outline"
              class:list={[layout === "video" && "aspect-video bg-gray-950"]}
            >
              <Image
                class="h-full w-full object-contain"
                class:list={[layout === "video" && "absolute top-0"]}
                src={item.data.image}
                alt=""
                widths={[120, 160, 240, 320, 640]}
                sizes={
                  "(max-width: 640px) calc(calc(100vw - 2rem ) / 1), " +
                  "(max-width: 768px) calc(calc(100vw - 3.5rem ) / 2), " +
                  "(max-width: 1024px) calc(calc(100vw - 8.5rem ) / 3), " +
                  "(max-width: 1280px) calc(calc(100vw - 10.5rem ) / 4), " +
                  "280px"
                }
              />
            </div>
            <span class="line-clamp-2 h-12 text-sm font-bold text-gray-700">
              <Icon
                className={`${typeIcons[item.data.type.id]} mr-2 align-bottom`}
              />
              {item.data.title}
            </span>
          </a>
        </li>
      ))}
    </ol>
  )
}
